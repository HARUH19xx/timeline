{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNqB;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,C","sources":["webpack://timeline/./src/style.scss?a88b","webpack://timeline/webpack/bootstrap","webpack://timeline/webpack/runtime/make namespace object","webpack://timeline/./src/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.scss'\r\n\r\n// const article = document.querySelectorAll('.l_article')\r\nconst leftBox = document.querySelectorAll('.c_left-box')\r\nconst rightBox = document.querySelectorAll('.c_right-box')\r\ndocument.addEventListener('scroll', () => {\r\n    for (let i =0; i < leftBox.length; i++) {\r\n        const getLeftBoxDistance = leftBox[i].getBoundingClientRect().top + leftBox[i].clientHeight * 2\r\n        console.log(getLeftBoxDistance)\r\n        if (window.innerHeight > getLeftBoxDistance) {\r\n            leftBox[i].classList.add('show')\r\n        }\r\n    }\r\n    for (let i =0; i < rightBox.length; i++) {\r\n        const getRightBoxDistance = rightBox[i].getBoundingClientRect().top + rightBox[i].clientHeight * 2\r\n        console.log(getRightBoxDistance)\r\n        if (window.innerHeight > getRightBoxDistance) {\r\n            rightBox[i].classList.add('show')\r\n        }\r\n    }\r\n})"],"names":[],"sourceRoot":""}